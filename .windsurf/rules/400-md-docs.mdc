---
description: Windsurf 项目中 Markdown 文档的格式和样式标准
globs: ["**/*.md"]
alwaysApply: true
---

# Windsurf Markdown 文档规范

## 上下文
- 适用于所有项目文档
- 确保文档的一致性和可读性
- 提高文档的专业性和清晰度

## 要求

### 1. 文档结构
- 使用层次标题（# 到 ######）
- 保持标题层次清晰和逻辑
- 避免跳过标题级别

### 2. 格式化
- 使用粗体 **重要内容**
- 使用斜体 *强调*
- 使用代码块 `inline code`
- 使用代码块展示代码片段

### 3. 列表
- 使用有序列表和无序列表
- 保持列表缩进一致
- 嵌套列表缩进 2-4 个空格

### 4. 链接和引用
- 使用描述性链接文本
- 避免使用 "点击这里"
- 优先使用相对路径

## Markdown 最佳实践

1. **清晰性**
   - 使用简洁的语言
   - 避免过长的段落
   - 使用短句和段落

2. **可读性**
   - 添加空行分隔段落
   - 使用标题和子标题
   - 考虑使用表格和图表

3. **一致性**
   - 遵循项目的 Markdown 风格指南
   - 保持格式和语气统一

## 特殊元素

### 代码块
```markdown
# 正确的代码块示例
```python
def hello_world():
    print("Hello, Windsurf!")
```

### 表格
```markdown
| 列1 | 列2 | 列3 |
|-----|-----|-----|
| 值1 | 值2 | 值3 |
```

### 图表
支持 Mermaid 图表：
```mermaid
graph TD
    A[开始] --> B{条件}
    B --> |是| C[执行]
    B --> |否| D[结束]
```

## 关键规则
- 保持文档简洁明了
- 优先考虑可读性
- 使用一致的格式
- 定期审查和更新文档

## 示例

<example>
# 项目文档

## 简介
**Windsurf** 是一个革命性的 AI 编程平台。

### 主要特性
- 智能代码生成 
- 实时协作 
- 多语言支持 
</example>

<example type="invalid">
# 项目文档
没有结构
没有格式
难以阅读
</example>

## Windsurf 特定指南
- 文档应该易于 AI 理解
- 使用清晰的标题和结构
- 提供足够的上下文信息